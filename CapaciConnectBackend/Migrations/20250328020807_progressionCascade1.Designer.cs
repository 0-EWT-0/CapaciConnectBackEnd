// <auto-generated />
using System;
using CapaciConnectBackend.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CapaciConnectBackend.Migrations
{
    [DbContext(typeof(AplicationDBContext))]
    [Migration("20250328020807_progressionCascade1")]
    partial class progressionCascade1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Calendars", b =>
                {
                    b.Property<int>("Id_calendar")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_calendar"));

                    b.Property<DateTime>("Date_end")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date_start")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_workshop_id")
                        .HasColumnType("int");

                    b.HasKey("Id_calendar");

                    b.HasIndex("Id_workshop_id");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Comments", b =>
                {
                    b.Property<int>("Id_comment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_comment"));

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_user_id")
                        .HasColumnType("int");

                    b.Property<int>("Id_workshop_id")
                        .HasColumnType("int");

                    b.HasKey("Id_comment");

                    b.HasIndex("Id_user_id");

                    b.HasIndex("Id_workshop_id");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Logs", b =>
                {
                    b.Property<int>("Id_log")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_log"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsersId_user")
                        .HasColumnType("int");

                    b.HasKey("Id_log");

                    b.HasIndex("UsersId_user");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Multimedia", b =>
                {
                    b.Property<int>("Id_multimedia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_multimedia"));

                    b.Property<string>("Media_type")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("VARCHAR(10)");

                    b.Property<string>("Media_url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_multimedia");

                    b.ToTable("Multimedia");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Progressions", b =>
                {
                    b.Property<int>("Id_progression")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_progression"));

                    b.Property<int>("Id_user_id")
                        .HasColumnType("int");

                    b.Property<int>("Id_workshop_id")
                        .HasColumnType("int");

                    b.Property<string>("Progression_status")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_progression");

                    b.HasIndex("Id_user_id");

                    b.HasIndex("Id_workshop_id");

                    b.ToTable("Progressions");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Reports", b =>
                {
                    b.Property<int>("Id_Report")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_Report"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_user_id")
                        .HasColumnType("int");

                    b.Property<int>("Id_workshop_id")
                        .HasColumnType("int");

                    b.Property<string>("Tittle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Report");

                    b.HasIndex("Id_user_id");

                    b.HasIndex("Id_workshop_id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Rols", b =>
                {
                    b.Property<int>("Id_rol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_rol"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rol_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_rol");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Sessions", b =>
                {
                    b.Property<int>("Id_session")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_session"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id_user_id")
                        .HasColumnType("int");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_session");

                    b.HasIndex("Id_user_id");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Subscriptions", b =>
                {
                    b.Property<int>("Id_subscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_subscription"));

                    b.Property<int>("Id_user_id")
                        .HasColumnType("int");

                    b.Property<int>("Id_workshop_id")
                        .HasColumnType("int");

                    b.HasKey("Id_subscription");

                    b.HasIndex("Id_user_id");

                    b.HasIndex("Id_workshop_id");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Users", b =>
                {
                    b.Property<int>("Id_user")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_user"));

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Id_rol_id")
                        .HasColumnType("int");

                    b.Property<string>("Last_names")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Profile_img")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_user");

                    b.HasIndex("Id_rol_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.WorkshopMultimedia", b =>
                {
                    b.Property<int>("Id_workshop_id")
                        .HasColumnType("int");

                    b.Property<int>("Id_multimedia_id")
                        .HasColumnType("int");

                    b.HasKey("Id_workshop_id", "Id_multimedia_id");

                    b.HasIndex("Id_multimedia_id");

                    b.ToTable("WorkshopMultimedia");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.WorkshopTypes", b =>
                {
                    b.Property<int>("Id_type")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_type"));

                    b.Property<string>("Type_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id_type");

                    b.ToTable("WorkshopTypes");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Workshops", b =>
                {
                    b.Property<int>("Id_workshop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id_workshop"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_type_id")
                        .HasColumnType("int");

                    b.Property<int>("Id_user_id")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id_workshop");

                    b.HasIndex("Id_type_id");

                    b.HasIndex("Id_user_id");

                    b.ToTable("Workshops");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Calendars", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Workshops", "Workshop")
                        .WithMany("Calendars")
                        .HasForeignKey("Id_workshop_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Comments", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Users", "User")
                        .WithMany("Comments")
                        .HasForeignKey("Id_user_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CapaciConnectBackend.Models.Domain.Workshops", "Workshop")
                        .WithMany("Comments")
                        .HasForeignKey("Id_workshop_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Logs", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Users", null)
                        .WithMany("Logs")
                        .HasForeignKey("UsersId_user");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Progressions", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Users", "User")
                        .WithMany("Progressions")
                        .HasForeignKey("Id_user_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CapaciConnectBackend.Models.Domain.Workshops", "Workshop")
                        .WithMany("Progressions")
                        .HasForeignKey("Id_workshop_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Reports", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Users", "User")
                        .WithMany("Reports")
                        .HasForeignKey("Id_user_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CapaciConnectBackend.Models.Domain.Workshops", "Workshops")
                        .WithMany("Reports")
                        .HasForeignKey("Id_workshop_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workshops");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Sessions", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Users", "User")
                        .WithMany("Sessions")
                        .HasForeignKey("Id_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Subscriptions", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Users", "User")
                        .WithMany("Subscriptions")
                        .HasForeignKey("Id_user_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CapaciConnectBackend.Models.Domain.Workshops", "Workshop")
                        .WithMany("Subscriptions")
                        .HasForeignKey("Id_workshop_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Users", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Rols", "Rol")
                        .WithMany("Users")
                        .HasForeignKey("Id_rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.WorkshopMultimedia", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.Multimedia", "Multimedia")
                        .WithMany("WorkshopMultimedia")
                        .HasForeignKey("Id_multimedia_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CapaciConnectBackend.Models.Domain.Workshops", "Workshop")
                        .WithMany("WorkshopMultimedia")
                        .HasForeignKey("Id_workshop_id")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Multimedia");

                    b.Navigation("Workshop");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Workshops", b =>
                {
                    b.HasOne("CapaciConnectBackend.Models.Domain.WorkshopTypes", "WorkshopType")
                        .WithMany("Workshops")
                        .HasForeignKey("Id_type_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CapaciConnectBackend.Models.Domain.Users", "User")
                        .WithMany("Workshops")
                        .HasForeignKey("Id_user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");

                    b.Navigation("WorkshopType");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Multimedia", b =>
                {
                    b.Navigation("WorkshopMultimedia");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Rols", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Users", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("Logs");

                    b.Navigation("Progressions");

                    b.Navigation("Reports");

                    b.Navigation("Sessions");

                    b.Navigation("Subscriptions");

                    b.Navigation("Workshops");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.WorkshopTypes", b =>
                {
                    b.Navigation("Workshops");
                });

            modelBuilder.Entity("CapaciConnectBackend.Models.Domain.Workshops", b =>
                {
                    b.Navigation("Calendars");

                    b.Navigation("Comments");

                    b.Navigation("Progressions");

                    b.Navigation("Reports");

                    b.Navigation("Subscriptions");

                    b.Navigation("WorkshopMultimedia");
                });
#pragma warning restore 612, 618
        }
    }
}
